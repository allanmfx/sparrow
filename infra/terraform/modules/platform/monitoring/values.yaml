# =============================================================================
# Prometheus Stack Helm Values Template
# =============================================================================

grafana:
  adminPassword: admin
  
  service:
    type: NodePort
    nodePort: 30000
  
  ingress:
    enabled: false
  
  resources:
    requests:
      memory: 128Mi
      cpu: 100m
    limits:
      memory: 256Mi
      cpu: 200m
  
  # Dashboard providers
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: "default"
          orgId: 1
          folder: ""
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default
  
  # Default dashboards
  dashboards:
    default:
      logs-dashboard:
        json: |
          {
            "dashboard": {
              "id": null,
              "title": "Sistema - Logs Centralizados",
              "tags": ["logs", "loki", "kubernetes"],
              "timezone": "browser",
              "panels": [
                {
                  "id": 1,
                  "title": "Logs dos Pods Kubernetes",
                  "type": "logs",
                  "targets": [
                    {
                      "expr": "{job=\"kubernetes-pods\"}",
                      "refId": "A"
                    }
                  ],
                  "gridPos": {
                    "h": 8,
                    "w": 24,
                    "x": 0,
                    "y": 0
                  }
                }
              ],
              "time": {
                "from": "now-1h",
                "to": "now"
              },
              "refresh": "30s"
            }
          }

prometheus:
  prometheusSpec:
    serviceMonitorSelectorNilUsesHelmValues: false
    serviceMonitorSelector: {}
    serviceMonitorNamespaceSelector: {}
    
    resources:
      requests:
        memory: 128Mi
        cpu: 100m
      limits:
        memory: 256Mi
        cpu: 200m
    
    storageSpec:
      volumeClaimTemplate:
        spec:
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 1Gi

alertmanager:
  alertmanagerSpec:
    resources:
      requests:
        memory: 64Mi
        cpu: 50m
      limits:
        memory: 128Mi
        cpu: 100m
    
    storage:
      volumeClaimTemplate:
        spec:
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 1Gi
